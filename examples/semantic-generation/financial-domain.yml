# Financial Services Domain Semantic Model
# Example configuration for generating financial ontology, data, SHACL shapes, and SPARQL queries
# Usage: unjucks generate semantic financial --config examples/semantic-generation/financial-domain.yml

# Domain Configuration
domain: "financial"
version: "3.2.1"
baseIRI: "http://financialservices.example.org"
creator: "Financial Technology Department"
license: "https://creativecommons.org/licenses/by-nc/4.0/"

# Namespace Declarations
prefixes:
  "": "http://financialservices.example.org/ontology#"
  "fin": "http://financialservices.example.org/ontology#"
  "account": "http://financialservices.example.org/data/account#"
  "customer": "http://financialservices.example.org/data/customer#"
  "fibo": "https://spec.edmcouncil.org/fibo/"
  "iso4217": "http://www.currency-iso.org/dam/downloads/lists/list_one.xml#"
  "swift": "http://swift.com/standards/"
  "fatca": "http://www.irs.gov/fatca/"
  "kyc": "http://www.bis.org/publ/bcbs85.pdf#"
  "mifid": "http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:32014L0065#"

# Ontology Imports
imports:
  - "https://spec.edmcouncil.org/fibo/ontology/FBC/FunctionalEntities/FinancialServicesEntities/"
  - "https://spec.edmcouncil.org/fibo/ontology/FBC/ProductsAndServices/FinancialProductsAndServices/"
  - "http://www.w3.org/ns/org#"
  - "http://www.w3.org/ns/prov-o"

# Class Definitions
classes:
  - name: "Customer"
    label: "Financial Customer"
    comment: "Individual or organization that holds financial products or services"
    subClassOf: "LegalEntity"
    restrictions:
      - property: "hasCustomerId"
        type: "cardinality"
        value: 1
      - property: "hasKYCStatus"
        type: "someValuesFrom"
        value: "KYCStatus"
      - property: "hasRiskProfile"
        type: "someValuesFrom"
        value: "RiskProfile"
    annotations:
      - property: "fibo:definition"
        value: "Party that receives financial services"
      - property: "skos:note"
        value: "Subject to regulatory compliance requirements"

  - name: "Account"
    label: "Financial Account"
    comment: "Financial arrangement between customer and financial institution"
    restrictions:
      - property: "hasAccountNumber"
        type: "cardinality"
        value: 1
      - property: "hasAccountType"
        type: "someValuesFrom"
        value: "AccountType"
      - property: "hasCurrency"
        type: "someValuesFrom"
        value: "Currency"
      - property: "hasBalance"
        type: "someValuesFrom"
        value: "MonetaryAmount"

  - name: "Transaction"
    label: "Financial Transaction"
    comment: "Transfer of value between accounts or parties"
    restrictions:
      - property: "hasTransactionId"
        type: "cardinality"
        value: 1
      - property: "hasAmount"
        type: "someValuesFrom"
        value: "MonetaryAmount"
      - property: "hasTransactionDate"
        type: "cardinality"
        value: 1
      - property: "fromAccount"
        type: "someValuesFrom"
        value: "Account"
      - property: "toAccount"
        type: "someValuesFrom"
        value: "Account"

  - name: "Investment"
    label: "Investment"
    comment: "Financial instrument or asset held for investment purposes"
    subClassOf: "FinancialInstrument"
    restrictions:
      - property: "hasISIN"
        type: "maxCardinality"
        value: 1
      - property: "hasMarketValue"
        type: "someValuesFrom"
        value: "MonetaryAmount"
      - property: "hasRiskRating"
        type: "someValuesFrom"
        value: "RiskRating"

  - name: "Loan"
    label: "Loan"
    comment: "Credit facility extended to customer"
    subClassOf: "CreditProduct"
    restrictions:
      - property: "hasPrincipalAmount"
        type: "cardinality"
        value: 1
      - property: "hasInterestRate"
        type: "cardinality"
        value: 1
      - property: "hasMaturityDate"
        type: "cardinality"
        value: 1
      - property: "hasCollateral"
        type: "someValuesFrom"
        value: "Collateral"

  - name: "ComplianceRecord"
    label: "Compliance Record"
    comment: "Documentation of regulatory compliance activities"
    restrictions:
      - property: "relatesTo"
        type: "someValuesFrom"
        value: "Customer"
      - property: "hasComplianceType"
        type: "someValuesFrom"
        value: "ComplianceType"
      - property: "hasComplianceStatus"
        type: "someValuesFrom"
        value: "ComplianceStatus"

  - name: "RiskAssessment"
    label: "Risk Assessment"
    comment: "Evaluation of financial risk associated with customer or transaction"
    restrictions:
      - property: "assessesRiskFor"
        type: "someValuesFrom"
        value: "Customer"
      - property: "hasRiskScore"
        type: "someValuesFrom"
        value: "xsd:decimal"
      - property: "hasRiskCategory"
        type: "someValuesFrom"
        value: "RiskCategory"

# Property Definitions
properties:
  # Object Properties
  - name: "holdsAccount"
    type: "ObjectProperty"
    label: "holds account"
    comment: "Relationship between customer and their financial account"
    domain: "Customer"
    range: "Account"
    inverseOf: "heldBy"

  - name: "executedBy"
    type: "ObjectProperty"
    label: "executed by"
    domain: "Transaction"
    range: "Customer"

  - name: "investsIn"
    type: "ObjectProperty"
    label: "invests in"
    domain: "Customer"
    range: "Investment"

  - name: "hasCompliance"
    type: "ObjectProperty"
    label: "has compliance record"
    domain: "Customer"
    range: "ComplianceRecord"

  - name: "subjectToRiskAssessment"
    type: "ObjectProperty"
    label: "subject to risk assessment"
    domain: ["Customer", "Transaction"]
    range: "RiskAssessment"

  # Data Properties
  - name: "customerId"
    type: "DatatypeProperty"
    label: "customer identifier"
    comment: "Unique identifier for customer"
    domain: "Customer"
    range: "xsd:string"
    characteristics: ["Functional"]

  - name: "accountNumber"
    type: "DatatypeProperty"
    label: "account number"
    domain: "Account"
    range: "xsd:string"
    characteristics: ["Functional"]

  - name: "transactionAmount"
    type: "DatatypeProperty"
    label: "transaction amount"
    domain: "Transaction"
    range: "xsd:decimal"

  - name: "interestRate"
    type: "DatatypeProperty"
    label: "interest rate"
    domain: "Loan"
    range: "xsd:decimal"

  - name: "creditScore"
    type: "DatatypeProperty"
    label: "credit score"
    domain: "Customer"
    range: "xsd:integer"

  - name: "complianceDate"
    type: "DatatypeProperty"
    label: "compliance verification date"
    domain: "ComplianceRecord"
    range: "xsd:dateTime"

# Sample Data Instances
instances:
  - name: "customer_alice_johnson"
    types: ["Customer", "IndividualCustomer"]
    label: "Alice Johnson"
    properties:
      customerId: "CUST_000123"
      firstName: "Alice"
      lastName: "Johnson"
      dateOfBirth: "1985-03-22"
      ssn: "***-**-5678"  # Masked for privacy
      creditScore: 750
      riskProfile: "MODERATE"
      kycStatus: "VERIFIED"
      residenceCountry: "USA"
    relationships:
      - property: "holdsAccount"
        target: "checking_account_001"
      - property: "holdsAccount" 
        target: "savings_account_001"
      - property: "investsIn"
        target: "portfolio_mixed_001"
    geospatial:
      address: "456 Financial Ave, Banking City, NY 10001"
      lat: 40.7831
      lng: -73.9712
    provenance:
      agent: "Customer Onboarding System"
      time: "2023-06-15T14:22:00Z"
      source: "https://bank.example.org/onboarding"

  - name: "checking_account_001"
    types: ["Account", "CheckingAccount"]
    label: "Alice Johnson Checking Account"
    properties:
      accountNumber: "CHK-987654321"
      accountType: "CHECKING"
      currency: "USD"
      currentBalance: 5432.10
      openDate: "2023-06-15"
      status: "ACTIVE"
      interestRate: 0.01
    relationships:
      - property: "heldBy"
        target: "customer_alice_johnson"
      - property: "managedBy"
        target: "branch_downtown"

  - name: "wire_transfer_001"
    types: ["Transaction", "WireTransfer"]
    label: "International Wire Transfer"
    properties:
      transactionId: "TXN_WT_789123"
      transactionAmount: 2500.00
      currency: "USD"
      transactionDate: "2024-01-20T10:15:30Z"
      description: "Wire transfer to UK supplier"
      status: "COMPLETED"
      fees: 45.00
    relationships:
      - property: "fromAccount"
        target: "checking_account_001"
      - property: "executedBy"
        target: "customer_alice_johnson"
      - property: "processedBy"
        target: "wire_processing_system"
    compliance:
      - type: "AML_CHECK"
        status: "PASSED"
        date: "2024-01-20T10:10:00Z"
      - type: "SANCTIONS_CHECK"
        status: "PASSED"
        date: "2024-01-20T10:10:00Z"

  - name: "mortgage_loan_001"
    types: ["Loan", "MortgageLoan"]
    label: "30-Year Fixed Mortgage"
    properties:
      loanId: "MTG_001987"
      principalAmount: 350000.00
      interestRate: 3.75
      termMonths: 360
      monthlyPayment: 1620.91
      originationDate: "2023-08-01"
      maturityDate: "2053-08-01"
      loanToValue: 0.80
    relationships:
      - property: "borrower"
        target: "customer_alice_johnson"
      - property: "securedBy"
        target: "residential_property_001"
      - property: "originatedBy"
        target: "mortgage_department"

  - name: "kyc_record_alice"
    types: ["ComplianceRecord", "KYCRecord"]
    label: "KYC Record for Alice Johnson"
    properties:
      recordId: "KYC_AJ_2023_001"
      complianceType: "KYC_VERIFICATION"
      complianceStatus: "COMPLIANT"
      verificationDate: "2023-06-15T09:00:00Z"
      expiryDate: "2024-06-15T09:00:00Z"
      verificationMethod: "DOCUMENT_VERIFICATION"
      documentsProvided: ["PASSPORT", "UTILITY_BILL", "TAX_RETURN"]
    relationships:
      - property: "relatesTo"
        target: "customer_alice_johnson"
      - property: "verifiedBy"
        target: "compliance_officer_001"

# SHACL Validation Shapes Configuration
nodeShapes:
  - name: "Customer"
    targetClass: "Customer"
    description: "Validation rules for customer data with financial compliance"
    severity: "Violation"
    properties:
      - path: "customerId"
        name: "Customer ID"
        datatype: "xsd:string"
        minCount: 1
        maxCount: 1
        pattern: "^CUST_\\d{6}$"
        message: "Customer ID must follow format CUST_000000"
      
      - path: "creditScore"
        name: "Credit Score"
        datatype: "xsd:integer"
        minInclusive: 300
        maxInclusive: 850
        message: "Credit score must be between 300 and 850"
      
      - path: "kycStatus"
        name: "KYC Status"
        datatype: "xsd:string"
        minCount: 1
        in: ["PENDING", "VERIFIED", "EXPIRED", "REJECTED"]
        message: "KYC status must be one of the approved values"
      
      - path: "dateOfBirth"
        name: "Date of Birth"
        datatype: "xsd:date"
        minCount: 1
        maxCount: 1
        maxInclusive: "2006-01-01"  # Minimum age requirement
        message: "Customer must be at least 18 years old"

  - name: "Transaction"
    targetClass: "Transaction"
    description: "Validation rules for financial transactions"
    severity: "Violation"
    properties:
      - path: "transactionAmount"
        name: "Transaction Amount"
        datatype: "xsd:decimal"
        minCount: 1
        minExclusive: 0
        message: "Transaction amount must be greater than zero"
      
      - path: "transactionId"
        name: "Transaction ID"
        datatype: "xsd:string"
        minCount: 1
        maxCount: 1
        pattern: "^TXN_[A-Z]{2,3}_\\d{6}$"
        message: "Transaction ID must follow format TXN_XX_000000"
    
    sparql:
      - message: "High-value transactions require additional compliance checks"
        severity: "Warning"
        select: |
          SELECT $this ?amount WHERE {
            $this fin:transactionAmount ?amount .
            FILTER(?amount > 10000)
            FILTER NOT EXISTS {
              $this fin:hasCompliance ?compliance .
              ?compliance fin:complianceType "AML_CHECK" .
            }
          }

  - name: "Account"
    targetClass: "Account"
    description: "Validation rules for financial accounts"
    properties:
      - path: "accountNumber"
        name: "Account Number"
        datatype: "xsd:string"
        minCount: 1
        maxCount: 1
        pattern: "^[A-Z]{3}-\\d{9}$"
        message: "Account number must follow format ABC-123456789"
      
      - path: "currentBalance"
        name: "Current Balance"
        datatype: "xsd:decimal"
        minCount: 1
        message: "Account must have a balance value"

# SPARQL Queries Configuration
queries:
  - name: "high_value_customers"
    description: "Identify customers with high account balances or investment values"
    type: "SELECT"
    distinct: true
    select: ["customer", "customerName", "totalValue", "riskProfile"]
    where:
      - type: "triple"
        subject: "?customer"
        predicate: "a"
        object: "fin:Customer"
      - type: "triple"
        subject: "?customer"
        predicate: "fin:firstName"
        object: "?firstName"
      - type: "triple"
        subject: "?customer"
        predicate: "fin:lastName"
        object: "?lastName"
      - type: "bind"
        expression: "CONCAT(?firstName, ' ', ?lastName)"
        variable: "customerName"
      - type: "optional"
        patterns:
          - subject: "?customer"
            predicate: "fin:holdsAccount"
            object: "?account"
          - subject: "?account"
            predicate: "fin:currentBalance"
            object: "?balance"
      - type: "optional"
        patterns:
          - subject: "?customer"
            predicate: "fin:investsIn"
            object: "?investment"
          - subject: "?investment"
            predicate: "fin:hasMarketValue"
            object: "?investmentValue"
      - type: "bind"
        expression: "COALESCE(?balance, 0) + COALESCE(?investmentValue, 0)"
        variable: "totalValue"
      - type: "triple"
        subject: "?customer"
        predicate: "fin:riskProfile"
        object: "?riskProfile"
      - type: "filter"
        expression: "?totalValue > 100000"
    orderBy:
      - var: "totalValue"
        desc: true

  - name: "compliance_expiry_alerts"
    description: "Find customers with expiring compliance records"
    type: "SELECT"
    select: ["customer", "customerName", "complianceType", "expiryDate", "daysUntilExpiry"]
    where:
      - type: "triple"
        subject: "?customer"
        predicate: "a"
        object: "fin:Customer"
      - type: "triple"
        subject: "?customer"
        predicate: "fin:firstName"
        object: "?firstName"
      - type: "triple"
        subject: "?customer"
        predicate: "fin:lastName"
        object: "?lastName"
      - type: "bind"
        expression: "CONCAT(?firstName, ' ', ?lastName)"
        variable: "customerName"
      - type: "triple"
        subject: "?customer"
        predicate: "fin:hasCompliance"
        object: "?compliance"
      - type: "triple"
        subject: "?compliance"
        predicate: "fin:complianceType"
        object: "?complianceType"
      - type: "triple"
        subject: "?compliance"
        predicate: "fin:expiryDate"
        object: "?expiryDate"
      - type: "bind"
        expression: "(?expiryDate - NOW()) / (60*60*24)"
        variable: "daysUntilExpiry"
      - type: "filter"
        expression: "?daysUntilExpiry <= 30 && ?daysUntilExpiry > 0"
    orderBy: ["daysUntilExpiry"]

  - name: "suspicious_transactions"
    description: "Identify potentially suspicious transaction patterns"
    type: "SELECT"
    select: ["customer", "transactionCount", "totalAmount", "avgAmount"]
    where:
      - type: "triple"
        subject: "?transaction"
        predicate: "a"
        object: "fin:Transaction"
      - type: "triple"
        subject: "?transaction"
        predicate: "fin:executedBy"
        object: "?customer"
      - type: "triple"
        subject: "?transaction"
        predicate: "fin:transactionAmount"
        object: "?amount"
      - type: "triple"
        subject: "?transaction"
        predicate: "fin:transactionDate"
        object: "?date"
      - type: "filter"
        expression: "?date >= (NOW() - \"P7D\"^^xsd:duration)"  # Last 7 days
    groupBy: ["customer"]
    having: "COUNT(?transaction) > 10 || SUM(?amount) > 50000"
    orderBy:
      - var: "totalAmount"
        desc: true

# Analytics Queries
analytics:
  - name: "customer_segmentation_by_value"
    description: "Segment customers by total relationship value"
    metric: "Customer Value Distribution"
    aggregation: "COUNT"
    select: ["valueSegment"]
    patterns:
      - subject: "?customer"
        predicate: "a"
        object: "fin:Customer"
      - subject: "?customer"
        predicate: "fin:holdsAccount"
        object: "?account"
      - subject: "?account"
        predicate: "fin:currentBalance"
        object: "?balance"
    filters:
      - "BIND(IF(?balance < 10000, 'Basic', IF(?balance < 100000, 'Premium', IF(?balance < 1000000, 'Private', 'Ultra-HNW'))) AS ?valueSegment)"
    groupBy: ["valueSegment"]
    orderBy: ["valueSegment"]
    resultVariable: "customerCount"

  - name: "loan_portfolio_analysis"
    description: "Analyze loan portfolio by risk and performance"
    metric: "Loan Portfolio Health"
    aggregation: "SUM"
    aggregateField: "principalAmount"
    select: ["riskRating", "loanType"]
    patterns:
      - subject: "?loan"
        predicate: "a"
        object: "fin:Loan"
      - subject: "?loan"
        predicate: "fin:principalAmount"
        object: "?principalAmount"
      - subject: "?loan"
        predicate: "fin:hasRiskRating"
        object: "?riskRating"
      - subject: "?loan"
        predicate: "fin:loanType"
        object: "?loanType"
    groupBy: ["riskRating", "loanType"]
    orderBy: ["riskRating", "loanType"]
    resultVariable: "totalExposure"

# Federated Queries (for connecting to external data sources)
federatedQueries:
  - name: "enhanced_customer_profile"
    description: "Enrich customer data with external credit bureau information"
    endpoints: 
      - "https://creditbureau.example.org/sparql"
      - "https://riskanalysis.example.org/sparql"
    select: ["customer", "internalCreditScore", "bureauCreditScore", "riskAssessment"]
    services:
      - endpoint: "https://creditbureau.example.org/sparql"
        patterns:
          - subject: "?customer"
            predicate: "bureau:hasExternalCreditScore"
            object: "?bureauCreditScore"
      - endpoint: "https://riskanalysis.example.org/sparql"
        patterns:
          - subject: "?customer"
            predicate: "risk:hasEnhancedRiskAssessment"
            object: "?riskAssessment"
    localPatterns:
      - subject: "?customer"
        predicate: "a"
        object: "fin:Customer"
      - subject: "?customer"
        predicate: "fin:creditScore"
        object: "?internalCreditScore"

# Update Operations
updates:
  - name: "update_credit_scores"
    description: "Batch update credit scores from external source"
    operation: "MODIFY"
    delete:
      - subject: "?customer"
        predicate: "fin:creditScore"
        object: "?oldScore"
    insert:
      - subject: "?customer"
        predicate: "fin:creditScore"
        object: "?newScore"
      - subject: "?customer"
        predicate: "fin:creditScoreDate"
        object: "?updateDate"
    where:
      - subject: "?customer"
        predicate: "a"
        object: "fin:Customer"
      - subject: "?customer"
        predicate: "fin:creditScore"
        object: "?oldScore"
    filters:
      - "BIND(NOW() AS ?updateDate)"

# Configuration for different output formats
outputFormats:
  ontology:
    path: "financial-ontology"
    filename: "financial-ontology.ttl"
  
  data:
    path: "financial-data" 
    filename: "financial-instances.ttl"
    
  shapes:
    path: "financial-shapes"
    filename: "financial-shapes.ttl"
    
  queries:
    path: "financial-queries"
    filename: "financial-queries.sparql"

# Generation metadata
generationMetadata:
  templateVersion: "1.0.0"
  generatedBy: "Unjucks Semantic Generator"
  compliance:
    - "Basel III"
    - "MiFID II"
    - "GDPR"
    - "PCI DSS"
    - "FATCA"
    - "KYC/AML"
  useCases:
    - "Risk Management"
    - "Regulatory Reporting"
    - "Customer Segmentation"
    - "Fraud Detection"
    - "Credit Assessment"
    - "Portfolio Management"