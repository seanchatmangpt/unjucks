version: '3.8'

services:
  # Main test runner service
  unjucks-test:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    container_name: unjucks-test-runner
    networks:
      - unjucks-test-network
    volumes:
      # Mount source code as read-only
      - ../src:/app/src:ro
      - ../templates:/app/templates:ro
      - ../tests:/app/tests:ro
      - ../package.json:/app/package.json:ro
      - ../package-lock.json:/app/package-lock.json:ro
      - ../vitest.config.js:/app/vitest.config.js:ro
      - ../vitest.minimal.config.js:/app/vitest.minimal.config.js:ro
      # Writable volumes for test artifacts
      - test-results:/app/test-results
      - test-coverage:/app/coverage
      - test-logs:/app/logs
      # Node modules (managed by container)
      - node-modules:/app/node_modules
    environment:
      NODE_ENV: test
      CI: "true"
      FORCE_COLOR: "0"
      # Test configuration
      VITEST_REPORTER: json
      COVERAGE_DIR: /app/coverage
      LOG_LEVEL: warn
    # Resource limits for constraint testing
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: false  # Need write access for test artifacts
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    user: "1001:1001"
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Test service ready')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Security testing service (isolated)
  unjucks-security-test:
    build:
      context: ..
      dockerfile: docker/Dockerfile.test
    container_name: unjucks-security-test
    networks:
      - unjucks-security-network
    volumes:
      # Read-only mounts for security testing
      - ../src:/app/src:ro
      - ../templates:/app/templates:ro
      - ../tests:/app/tests:ro
      - ../package.json:/app/package.json:ro
      # Test artifacts
      - security-results:/app/test-results
    environment:
      NODE_ENV: test
      SECURITY_TEST: "true"
      NO_NETWORK: "true"
    # Stricter resource limits for security testing
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    # Enhanced security
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=50m
      - /app/test-results:size=10m
    user: "1001:1001"
    cap_drop:
      - ALL
    # No external network access
    network_mode: none
    profiles:
      - security

networks:
  # Main test network
  unjucks-test-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: unjucks-test0
    ipam:
      config:
        - subnet: 172.20.0.0/24
  
  # Isolated security test network
  unjucks-security-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: unjucks-sec0
    internal: true
    ipam:
      config:
        - subnet: 172.21.0.0/24

volumes:
  # Test artifacts volumes
  test-results:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=100m,uid=1001,gid=1001
  
  test-coverage:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=50m,uid=1001,gid=1001
  
  test-logs:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=20m,uid=1001,gid=1001
  
  security-results:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=50m,uid=1001,gid=1001
  
  # Node modules volume for faster builds
  node-modules:
    driver: local