@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix kg: <http://example.org/kg/shapes/> .

# Entity Validation Shapes

kg:PersonShape
    a sh:NodeShape ;
    sh:targetClass schema:Person ;
    sh:property [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Person must have exactly one name"
    ] ;
    sh:property [
        sh:path foaf:mbox ;
        sh:maxCount 1 ;
        sh:pattern "^mailto:.+@.+\\..+" ;
        sh:message "Email must be a valid mailto URI"
    ] ;
    sh:property [
        sh:path schema:birthDate ;
        sh:maxCount 1 ;
        sh:datatype xsd:date ;
        sh:message "Birth date must be a valid date"
    ] .

kg:OrganizationShape
    a sh:NodeShape ;
    sh:targetClass schema:Organization ;
    sh:property [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "Organization must have a name"
    ] ;
    sh:property [
        sh:path foaf:homepage ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI ;
        sh:pattern "^https?://" ;
        sh:message "Homepage must be a valid HTTP(S) URL"
    ] .

kg:PlaceShape
    a sh:NodeShape ;
    sh:targetClass schema:Place ;
    sh:property [
        sh:path schema:latitude ;
        sh:maxCount 1 ;
        sh:datatype xsd:decimal ;
        sh:minInclusive -90.0 ;
        sh:maxInclusive 90.0 ;
        sh:message "Latitude must be between -90 and 90 degrees"
    ] ;
    sh:property [
        sh:path schema:longitude ;
        sh:maxCount 1 ;
        sh:datatype xsd:decimal ;
        sh:minInclusive -180.0 ;
        sh:maxInclusive 180.0 ;
        sh:message "Longitude must be between -180 and 180 degrees"
    ] .

kg:EventShape
    a sh:NodeShape ;
    sh:targetClass schema:Event ;
    sh:property [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:datatype xsd:string
    ] ;
    sh:property [
        sh:path schema:startDate ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:datatype xsd:date ]
            [ sh:datatype xsd:dateTime ]
        )
    ] ;
    sh:property [
        sh:path schema:endDate ;
        sh:maxCount 1 ;
        sh:or (
            [ sh:datatype xsd:date ]
            [ sh:datatype xsd:dateTime ]
        )
    ] ;
    sh:sparql [
        sh:message "End date must be after start date" ;
        sh:prefixes [
            sh:declare [
                sh:prefix "schema" ;
                sh:namespace "http://schema.org/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this ?startDate ?endDate WHERE {
                $this schema:startDate ?startDate ;
                      schema:endDate ?endDate .
                FILTER(?endDate <= ?startDate)
            }
        """
    ] .

# Relationship Validation Shapes

kg:RelationshipShape
    a sh:NodeShape ;
    sh:targetNode kg:QualifiedRelation ;
    sh:property [
        sh:path kg:hasSubject ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI
    ] ;
    sh:property [
        sh:path kg:hasObject ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI
    ] ;
    sh:property [
        sh:path kg:relationshipType ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:nodeKind sh:IRI
    ] ;
    sh:property [
        sh:path kg:confidence ;
        sh:maxCount 1 ;
        sh:datatype xsd:decimal ;
        sh:minInclusive 0.0 ;
        sh:maxInclusive 1.0 ;
        sh:message "Confidence must be between 0 and 1"
    ] .

# Data Quality Shapes

kg:ProvenanceShape
    a sh:NodeShape ;
    sh:targetClass kg:QualityReport ;
    sh:property [
        sh:path dct:created ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:datatype xsd:dateTime
    ] ;
    sh:property [
        sh:path kg:completenessScore ;
        sh:maxCount 1 ;
        sh:datatype xsd:decimal ;
        sh:minInclusive 0.0 ;
        sh:maxInclusive 1.0
    ] ;
    sh:property [
        sh:path kg:accuracyScore ;
        sh:maxCount 1 ;
        sh:datatype xsd:decimal ;
        sh:minInclusive 0.0 ;
        sh:maxInclusive 1.0
    ] .

# URI Pattern Validation

kg:EntityURIShape
    a sh:NodeShape ;
    sh:targetNode kg:Entity ;
    sh:nodeKind sh:IRI ;
    sh:pattern "^http://example\\.org/kg/.+/.+" ;
    sh:message "Entity URI must follow the pattern: http://example.org/kg/{domain}/{entity-id}" .

# Temporal Consistency Shapes

kg:TemporalConsistencyShape
    a sh:NodeShape ;
    sh:sparql [
        sh:message "Entity creation date cannot be in the future" ;
        sh:prefixes [
            sh:declare [
                sh:prefix "dct" ;
                sh:namespace "http://purl.org/dc/terms/"^^xsd:anyURI
            ]
        ] ;
        sh:select """
            SELECT $this ?created WHERE {
                $this dct:created ?created .
                FILTER(?created > NOW())
            }
        """
    ] .

# Completeness Validation

kg:RequiredPropertiesShape
    a sh:NodeShape ;
    sh:targetClass schema:Thing ;
    sh:property [
        sh:path schema:name ;
        sh:minCount 1 ;
        sh:message "Every entity should have at least one name"
    ] ;
    sh:property [
        sh:path dct:created ;
        sh:minCount 1 ;
        sh:datatype xsd:dateTime ;
        sh:message "Every entity should have a creation timestamp"
    ] .