-- Performance indexes for database
-- Generated: <%= new Date().toISOString() %>


-- PostgreSQL optimized indexes

-- SQLite optimized indexes  



-- User table indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_email ON users(email);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_username ON users(username);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_is_active ON users(is_active);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_role ON users(role);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_is_verified ON users(is_verified);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_github ON users(github_username) WHERE github_username IS NOT NULL;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_users_created ON users(created_at);

CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
CREATE INDEX IF NOT EXISTS idx_users_is_active ON users(is_active);
CREATE INDEX IF NOT EXISTS idx_users_role ON users(role);
CREATE INDEX IF NOT EXISTS idx_users_is_verified ON users(is_verified);
CREATE INDEX IF NOT EXISTS idx_users_github ON users(github_username);
CREATE INDEX IF NOT EXISTS idx_users_created ON users(created_at);



-- Interview sessions indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_user ON interview_sessions(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_interviewer ON interview_sessions(interviewer_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_status ON interview_sessions(status);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_token ON interview_sessions(session_token);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_scheduled ON interview_sessions(scheduled_at);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_type ON interview_sessions(session_type);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_difficulty ON interview_sessions(difficulty_level);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_sessions_active_user ON interview_sessions(user_id, status) WHERE status IN ('active', 'pending');

CREATE INDEX IF NOT EXISTS idx_sessions_user ON interview_sessions(user_id);
CREATE INDEX IF NOT EXISTS idx_sessions_interviewer ON interview_sessions(interviewer_id);
CREATE INDEX IF NOT EXISTS idx_sessions_status ON interview_sessions(status);
CREATE INDEX IF NOT EXISTS idx_sessions_token ON interview_sessions(session_token);
CREATE INDEX IF NOT EXISTS idx_sessions_scheduled ON interview_sessions(scheduled_at);
CREATE INDEX IF NOT EXISTS idx_sessions_type ON interview_sessions(session_type);
CREATE INDEX IF NOT EXISTS idx_sessions_difficulty ON interview_sessions(difficulty_level);
CREATE INDEX IF NOT EXISTS idx_sessions_user_status ON interview_sessions(user_id, status);



-- Code submissions indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_uuid ON code_submissions(submission_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_session ON code_submissions(session_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_user ON code_submissions(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_exercise ON code_submissions(exercise_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_language ON code_submissions(language);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_time ON code_submissions(submission_time);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_score ON code_submissions(ai_score) WHERE ai_score IS NOT NULL;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_submissions_user_time ON code_submissions(user_id, submission_time);

CREATE INDEX IF NOT EXISTS idx_submissions_uuid ON code_submissions(submission_uuid);
CREATE INDEX IF NOT EXISTS idx_submissions_session ON code_submissions(session_id);
CREATE INDEX IF NOT EXISTS idx_submissions_user ON code_submissions(user_id);
CREATE INDEX IF NOT EXISTS idx_submissions_exercise ON code_submissions(exercise_id);
CREATE INDEX IF NOT EXISTS idx_submissions_language ON code_submissions(language);
CREATE INDEX IF NOT EXISTS idx_submissions_time ON code_submissions(submission_time);
CREATE INDEX IF NOT EXISTS idx_submissions_score ON code_submissions(ai_score);
CREATE INDEX IF NOT EXISTS idx_submissions_user_time ON code_submissions(user_id, submission_time);



-- Feedback reports indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_uuid ON feedback_reports(report_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_submission ON feedback_reports(submission_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_session ON feedback_reports(session_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_user ON feedback_reports(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_reviewer ON feedback_reports(reviewer_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_reviewed ON feedback_reports(is_reviewed_by_human);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_feedback_confidence ON feedback_reports(confidence_score) WHERE confidence_score IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_feedback_uuid ON feedback_reports(report_uuid);
CREATE INDEX IF NOT EXISTS idx_feedback_submission ON feedback_reports(submission_id);
CREATE INDEX IF NOT EXISTS idx_feedback_session ON feedback_reports(session_id);
CREATE INDEX IF NOT EXISTS idx_feedback_user ON feedback_reports(user_id);
CREATE INDEX IF NOT EXISTS idx_feedback_reviewer ON feedback_reports(reviewer_id);
CREATE INDEX IF NOT EXISTS idx_feedback_reviewed ON feedback_reports(is_reviewed_by_human);
CREATE INDEX IF NOT EXISTS idx_feedback_confidence ON feedback_reports(confidence_score);



-- Drill exercises indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_uuid ON drill_exercises(exercise_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_slug ON drill_exercises(slug);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_difficulty ON drill_exercises(difficulty_level);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_category ON drill_exercises(category);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_active ON drill_exercises(is_active);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_frequency ON drill_exercises(frequency_score) WHERE frequency_score > 0;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_success_rate ON drill_exercises(success_rate) WHERE success_rate IS NOT NULL;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_exercises_category_difficulty ON drill_exercises(category, difficulty_level, is_active);

CREATE INDEX IF NOT EXISTS idx_exercises_uuid ON drill_exercises(exercise_uuid);
CREATE INDEX IF NOT EXISTS idx_exercises_slug ON drill_exercises(slug);
CREATE INDEX IF NOT EXISTS idx_exercises_difficulty ON drill_exercises(difficulty_level);
CREATE INDEX IF NOT EXISTS idx_exercises_category ON drill_exercises(category);
CREATE INDEX IF NOT EXISTS idx_exercises_active ON drill_exercises(is_active);
CREATE INDEX IF NOT EXISTS idx_exercises_frequency ON drill_exercises(frequency_score);
CREATE INDEX IF NOT EXISTS idx_exercises_success_rate ON drill_exercises(success_rate);
CREATE INDEX IF NOT EXISTS idx_exercises_category_difficulty ON drill_exercises(category, difficulty_level);



-- Rubric scores indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_uuid ON rubric_scores(score_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_submission ON rubric_scores(submission_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_session ON rubric_scores(session_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_user ON rubric_scores(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_evaluator ON rubric_scores(evaluator_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_composite ON rubric_scores(composite_score) WHERE composite_score IS NOT NULL;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_grade ON rubric_scores(grade) WHERE grade IS NOT NULL;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_scores_method ON rubric_scores(scoring_method);

CREATE INDEX IF NOT EXISTS idx_scores_uuid ON rubric_scores(score_uuid);
CREATE INDEX IF NOT EXISTS idx_scores_submission ON rubric_scores(submission_id);
CREATE INDEX IF NOT EXISTS idx_scores_session ON rubric_scores(session_id);
CREATE INDEX IF NOT EXISTS idx_scores_user ON rubric_scores(user_id);
CREATE INDEX IF NOT EXISTS idx_scores_evaluator ON rubric_scores(evaluator_id);
CREATE INDEX IF NOT EXISTS idx_scores_composite ON rubric_scores(composite_score);
CREATE INDEX IF NOT EXISTS idx_scores_grade ON rubric_scores(grade);
CREATE INDEX IF NOT EXISTS idx_scores_method ON rubric_scores(scoring_method);



-- User analytics indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_analytics_uuid ON user_analytics(analytics_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_analytics_user ON user_analytics(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_analytics_date ON user_analytics(date_recorded);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_analytics_user_date ON user_analytics(user_id, date_recorded);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_analytics_avg_score ON user_analytics(average_score) WHERE average_score > 0;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_analytics_streak ON user_analytics(streak_days) WHERE streak_days > 0;

CREATE INDEX IF NOT EXISTS idx_analytics_uuid ON user_analytics(analytics_uuid);
CREATE INDEX IF NOT EXISTS idx_analytics_user ON user_analytics(user_id);
CREATE INDEX IF NOT EXISTS idx_analytics_date ON user_analytics(date_recorded);
CREATE INDEX IF NOT EXISTS idx_analytics_user_date ON user_analytics(user_id, date_recorded);
CREATE INDEX IF NOT EXISTS idx_analytics_avg_score ON user_analytics(average_score);
CREATE INDEX IF NOT EXISTS idx_analytics_streak ON user_analytics(streak_days);



-- Session metrics indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_metrics_uuid ON session_metrics(metrics_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_metrics_session ON session_metrics(session_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_metrics_user ON session_metrics(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_metrics_duration ON session_metrics(total_duration_seconds) WHERE total_duration_seconds IS NOT NULL;
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_metrics_quality ON session_metrics(code_quality_score) WHERE code_quality_score IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_metrics_uuid ON session_metrics(metrics_uuid);
CREATE INDEX IF NOT EXISTS idx_metrics_session ON session_metrics(session_id);
CREATE INDEX IF NOT EXISTS idx_metrics_user ON session_metrics(user_id);
CREATE INDEX IF NOT EXISTS idx_metrics_duration ON session_metrics(total_duration_seconds);
CREATE INDEX IF NOT EXISTS idx_metrics_quality ON session_metrics(code_quality_score);



-- Progress tracking indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_progress_uuid ON progress_tracking(progress_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_progress_user ON progress_tracking(user_id);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_progress_level ON progress_tracking(current_level);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_progress_xp ON progress_tracking(total_xp);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_progress_review ON progress_tracking(next_review_date) WHERE next_review_date IS NOT NULL;

CREATE INDEX IF NOT EXISTS idx_progress_uuid ON progress_tracking(progress_uuid);
CREATE INDEX IF NOT EXISTS idx_progress_user ON progress_tracking(user_id);
CREATE INDEX IF NOT EXISTS idx_progress_level ON progress_tracking(current_level);
CREATE INDEX IF NOT EXISTS idx_progress_xp ON progress_tracking(total_xp);
CREATE INDEX IF NOT EXISTS idx_progress_review ON progress_tracking(next_review_date);



-- Usage statistics indexes

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_usage_uuid ON usage_statistics(stat_uuid);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_usage_date ON usage_statistics(date_recorded);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_usage_active_users ON usage_statistics(daily_active_users);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_usage_sessions ON usage_statistics(sessions_completed);

CREATE INDEX IF NOT EXISTS idx_usage_uuid ON usage_statistics(stat_uuid);
CREATE INDEX IF NOT EXISTS idx_usage_date ON usage_statistics(date_recorded);
CREATE INDEX IF NOT EXISTS idx_usage_active_users ON usage_statistics(daily_active_users);
CREATE INDEX IF NOT EXISTS idx_usage_sessions ON usage_statistics(sessions_completed);



-- Generic indexes for database

CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_database_created ON database(created_at);
CREATE INDEX CONCURRENTLY IF NOT EXISTS idx_database_updated ON database(updated_at);

CREATE INDEX IF NOT EXISTS idx_database_created ON database(created_at);
CREATE INDEX IF NOT EXISTS idx_database_updated ON database(updated_at);



-- Performance analysis queries for database

-- PostgreSQL specific performance monitoring
-- Run this to analyze index usage:
-- SELECT schemaname, tablename, indexname, idx_scan, idx_tup_read, idx_tup_fetch 
-- FROM pg_stat_user_indexes WHERE tablename = 'database';

-- Check for unused indexes:
-- SELECT schemaname, tablename, indexname, idx_scan 
-- FROM pg_stat_user_indexes 
-- WHERE tablename = 'database' AND idx_scan = 0;

-- SQLite specific performance monitoring
-- Run EXPLAIN QUERY PLAN to analyze query performance
-- Example: EXPLAIN QUERY PLAN SELECT * FROM database WHERE created_at > datetime('now', '-1 day');
