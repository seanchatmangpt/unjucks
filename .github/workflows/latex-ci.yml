name: LaTeX Security & Performance CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'templates/latex/**'
      - 'src/**/*.js'
      - 'tests/**'
      - 'package.json'
  pull_request:
    branches: [main]
    paths:
      - 'templates/latex/**'
      - 'src/**/*.js'
      - 'tests/**'
      - 'package.json'

jobs:
  latex-security:
    name: LaTeX Security & Validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run LaTeX security validation
        run: npm run validate:latex

      - name: Run vulnerability scan
        run: npm run security:scan

      - name: Run LaTeX filter tests
        run: npm run test:latex-filters

      - name: Run chaos engineering tests
        run: npm run test:chaos

      - name: Performance benchmarks
        run: npm run benchmark:latex

      - name: Upload security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-report-node-${{ matrix.node-version }}
          path: |
            tests/security-report.json
            tests/latex-chaos-report.json
            tests/performance-report.json

  template-validation:
    name: Template System Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate template structure
        run: npm run validate:templates

      - name: Test template rendering
        run: npm run test:template-rendering

      - name: Validate schema compliance
        run: npm run validate:schema

  performance-benchmarks:
    name: Performance & Load Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run performance benchmarks
        run: npm run benchmark:full

      - name: Load testing
        run: npm run test:load

      - name: Memory leak detection
        run: npm run test:memory

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: |
            benchmarks/results.json
            tests/memory-report.json

  deployment-validation:
    name: Deployment Validation
    runs-on: ubuntu-latest
    needs: [latex-security, template-validation]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Validate build artifacts
        run: npm run validate:build

      - name: Test CLI functionality
        run: npm run test:cli

      - name: Integration tests
        run: npm run test:integration

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate

      - name: CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run SAST scan
        run: npm run security:sast

      - name: Dependency vulnerability scan
        run: npm run security:deps