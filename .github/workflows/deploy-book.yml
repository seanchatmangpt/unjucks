name: Deploy mdbook to GitHub Pages

on:
  # Trigger deployment on push to main branch
  push:
    branches: ["main"]
    paths: 
      - 'docs/book/**'
      - '.github/workflows/deploy-book.yml'

  # Allow manual trigger
  workflow_dispatch:

# Set GITHUB_TOKEN permissions for deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.40
      MDBOOK_TOC_VERSION: 0.14.2
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: mdbook-${{ env.MDBOOK_VERSION }}-${{ env.MDBOOK_TOC_VERSION }}

      - name: Install mdbook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
          cargo install --version ${MDBOOK_TOC_VERSION} mdbook-toc

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Create theme directory
        run: |
          mkdir -p docs/book/theme
          # Ensure custom CSS/JS files exist or create defaults
          if [ ! -f docs/book/theme/custom.css ]; then
            echo "/* Unjucks custom styles */" > docs/book/theme/custom.css
            echo ":root { --primary-color: #0066cc; }" >> docs/book/theme/custom.css
            echo ".content h1, .content h2, .content h3 { color: var(--primary-color); }" >> docs/book/theme/custom.css
          fi
          if [ ! -f docs/book/theme/custom.js ]; then
            echo "// Unjucks custom scripts" > docs/book/theme/custom.js
            echo "console.log('Unjucks documentation loaded');" >> docs/book/theme/custom.js
          fi

      - name: Build with mdbook
        run: |
          cd docs/book
          mdbook build

      - name: Create CNAME file
        run: |
          echo "unjucks.dev" > docs/book/book/CNAME

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/book/book

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notification job
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Deployment Status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "📖 mdbook successfully deployed to https://unjucks.dev"
            echo "🚀 GitHub Pages URL: ${{ needs.deploy.outputs.deployment_url || 'https://ruvnet.github.io/unjucks/' }}"
          else
            echo "❌ Deployment failed. Check the logs above."
            exit 1
          fi