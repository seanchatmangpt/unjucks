# Template mappings configuration for spec-engine
# This file defines how specifications are mapped to templates

models:
  - specPattern:
      entityTypes:
        - model
      technologyStack:
        language: typescript
        framework: nestjs
    templatePath: nestjs/model/entity.ejs
    variables:
      entityName: 
        specPath: name
        transformer: pascalCase
      tableName:
        specPath: annotations[?(@.name=="Entity")].parameters.table
        defaultValue: "{{ name | snakeCase | pluralize }}"
      properties: entities[0].properties
      imports: 
        specPath: context.technology.dependencies
        transformer: filterImports
    conditions:
      - type: exists
        path: annotations[?(@.name=="Entity")]
    priority: 20

  - specPattern:
      entityTypes:
        - model
      technologyStack:
        language: typescript
    templatePath: typescript/interface/model.ejs
    variables:
      entityName:
        specPath: name
        transformer: pascalCase
      properties: properties
    conditions: []
    priority: 10

services:
  - specPattern:
      entityTypes:
        - service
      technologyStack:
        language: typescript
        framework: nestjs
    templatePath: nestjs/service/service.ejs
    variables:
      serviceName:
        specPath: name
        transformer: pascalCase
      methods: methods
      dependencies:
        specPath: context.technology.dependencies
    conditions: []
    priority: 20

  - specPattern:
      entityTypes:
        - service
      technologyStack:
        language: typescript
    templatePath: typescript/service/service.ejs
    variables:
      serviceName:
        specPath: name
        transformer: pascalCase
      methods: methods
    conditions: []
    priority: 10

controllers:
  - specPattern:
      entityTypes:
        - controller
      technologyStack:
        language: typescript
        framework: nestjs
    templatePath: nestjs/controller/controller.ejs
    variables:
      controllerName:
        specPath: name
        transformer: pascalCase
      methods: methods
      basePath:
        specPath: annotations[?(@.name=="Controller")].parameters.path
        defaultValue: "/{{ name | kebabCase }}"
    conditions: []
    priority: 20

  - specPattern:
      entityTypes:
        - controller
      technologyStack:
        language: typescript
        framework: express
    templatePath: express/controller/controller.ejs
    variables:
      controllerName:
        specPath: name
        transformer: pascalCase
      methods: methods
      routerPath:
        specPath: annotations[?(@.name=="Router")].parameters.path
        defaultValue: "/{{ name | kebabCase }}"
    conditions: []
    priority: 15

repositories:
  - specPattern:
      entityTypes:
        - repository
      technologyStack:
        language: typescript
        framework: nestjs
    templatePath: nestjs/repository/repository.ejs
    variables:
      repositoryName:
        specPath: name
        transformer: pascalCase
      entityName:
        specPath: relatedEntity
        transformer: pascalCase
      methods: methods
    conditions:
      - type: exists
        path: relatedEntity
    priority: 20

tests:
  - specPattern:
      entityTypes:
        - model
        - service
        - controller
      technologyStack:
        language: typescript
    templatePath: jest/unit-test.ejs
    variables:
      testSubject:
        specPath: name
        transformer: pascalCase
      testType: type
      methods: methods
      properties: properties
    conditions: []
    priority: 5

dtos:
  - specPattern:
      entityTypes:
        - model
      technologyStack:
        language: typescript
    templatePath: typescript/dto/create-dto.ejs
    variables:
      entityName:
        specPath: name
        transformer: pascalCase
      createFields:
        specPath: properties[?(@.required==true && @.name!="id" && @.name!="createdAt" && @.name!="updatedAt")]
    conditions: []
    priority: 15

  - specPattern:
      entityTypes:
        - model
      technologyStack:
        language: typescript
    templatePath: typescript/dto/update-dto.ejs
    variables:
      entityName:
        specPath: name
        transformer: pascalCase
      updateFields:
        specPath: properties[?(@.name!="id" && @.name!="createdAt" && @.name!="updatedAt")]
    conditions: []
    priority: 15

# API Documentation
api-docs:
  - specPattern:
      entityTypes:
        - controller
        - service
      technologyStack:
        framework: nestjs
    templatePath: swagger/api-docs.ejs
    variables:
      apiTitle: context.name
      apiVersion: version
      controllers: entities[?(@.type=="controller")]
      services: entities[?(@.type=="service")]
    conditions: []
    priority: 10

# Database Migrations
migrations:
  - specPattern:
      entityTypes:
        - model
      technologyStack:
        database: postgresql
    templatePath: typeorm/migration/create-table.ejs
    variables:
      tableName:
        specPath: annotations[?(@.name=="Entity")].parameters.table
        defaultValue: "{{ name | snakeCase | pluralize }}"
      columns: properties
      entityName:
        specPath: name
        transformer: pascalCase
    conditions:
      - type: exists
        path: properties
    priority: 15

# Configuration Files
config:
  - specPattern:
      technologyStack:
        framework: nestjs
    templatePath: nestjs/config/app.module.ejs
    variables:
      entities: entities[?(@.type=="model")]
      services: entities[?(@.type=="service")]
      controllers: entities[?(@.type=="controller")]
      imports: context.technology.dependencies
    conditions: []
    priority: 25

  - specPattern:
      technologyStack:
        database: postgresql
    templatePath: typeorm/config/database.config.ejs
    variables:
      entities: entities[?(@.type=="model")]
      databaseName:
        specPath: context.database.name
        defaultValue: "{{ context.domain | snakeCase }}"
    conditions: []
    priority: 20

# Docker and Deployment
deployment:
  - specPattern:
      technologyStack:
        runtime: nodejs
    templatePath: docker/Dockerfile.ejs
    variables:
      nodeVersion:
        specPath: context.technology.nodeVersion
        defaultValue: "18"
      appName: name
      dependencies: context.technology.dependencies
    conditions: []
    priority: 5

  - specPattern:
      technologyStack:
        framework: nestjs
    templatePath: docker/docker-compose.ejs
    variables:
      appName: name
      services: entities[?(@.type=="service")]
      database: context.technology.database
    conditions: []
    priority: 5