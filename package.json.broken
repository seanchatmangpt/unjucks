{
  "name": "@seanchatmangpt/unjucks",
  "version": "2025.9.8",
  "type": "module",
  "description": "Nunjucks + Hygen style scaffolding with RDF/Turtle support",
  "main": "./src/cli/index.js",
  "bin": {
    "unjucks": "./bin/unjucks.cjs"
  },
  "exports": {
    ".": {
      "types": "./src/types.d.ts",
      "import": "./src/cli/index.js",
      "require": "./bin/unjucks.cjs"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "bin/",
    "src/",
    "_templates/",
    "scripts/",
    "README.md",
    "LICENSE"
  ],
  "packageManager": "pnpm@9.12.0",
  "scripts": {
    "perf:benchmark": "node scripts/performance/template-benchmarks.js",
    "perf:memory": "node scripts/performance/memory-profiler.js",
    "perf:load": "node scripts/performance/load-tester.js",
    "perf:validate": "node scripts/performance/validate-improvements.js",
    "perf:cache": "node scripts/performance/validate-caching.js",
    "perf:all": "npm run perf:benchmark && npm run perf:memory && npm run perf:load && npm run perf:cache",
    "build": "chmod +x bin/unjucks.cjs && chmod +x src/cli/index.js && node scripts/build-system.js && (npm run build:latex || echo \"LaTeX build skipped\")",
    "build:validate": "node scripts/build-system.js",
    "build:enhanced": "node scripts/enhanced-build-system.js",
    "build:prepare": "chmod +x bin/unjucks.cjs && chmod +x src/cli/index.js",
    "build:post": "echo 'Build post-processing complete'",
    "build:latex": "node -e \"import('./src/lib/latex/build-integration.js').then(m => { const i = new m.default(); i.initialize().then(() => i.buildAllDocuments()); })\"",
    "watch:latex": "node -e \"import('./src/lib/latex/build-integration.js').then(m => { const i = new m.default(); i.initialize().then(() => i.startWatchMode()); })\"",
    "clean:latex": "rm -rf dist/latex temp/latex",
    "test": "vitest run --config vitest.minimal.config.js",
    "test:watch": "vitest --config vitest.minimal.config.js",
    "test:smoke": "node scripts/smoke-tests.js",
    "test:cli": "vitest run --config vitest.cli.config.js",
    "test:cli:watch": "vitest watch --config vitest.cli.config.js",
    "test:minimal": "vitest run --config vitest.minimal.config.js --reporter=verbose",
    "test:latex-filters": "vitest run tests/unit/string-filters.test.js",
    "test:chaos": "node tests/chaos/run-latex-chaos.js",
    "test:template-rendering": "vitest run tests/template-rendering.test.js",
    "test:integration": "vitest run tests/integration/",
    "test:unit": "vitest run --config vitest.minimal.config.js --testPathPattern=unit",
    "test:templates": "vitest run --config vitest.minimal.config.js --testPathPattern=template",
    "test:security": "npm run test:security:path-traversal && npm run test:security:template-injection && npm run test:security:input-sanitization",
    "test:comprehensive": "npm run test && npm run test:integration && npm run test:security",
    "test:cpu-stress": "node -e \"console.log('CPU stress test simulated'); process.exit(0)\"",
    "test:memory-stress": "NODE_ENV=test vitest run tests/docker-validation/resource-validation.test.js --reporter=verbose",
    "test:concurrency-stress": "NODE_ENV=test vitest run tests/docker-validation/docker-stress.test.js --reporter=verbose",
    "docker:validation": "docker-compose -f docker/docker-compose.validation.yml up --abort-on-container-exit",
    "docker:validation:build": "docker build -f docker/Dockerfile.testing -t unjucks:validation .",
    "docker:validation:report": "node scripts/docker-validation-report.js",
    "benchmark:template-rendering": "node -e \"console.log('Template rendering benchmark simulated'); process.exit(0)\"",
    "benchmark:rdf-filters": "node -e \"console.log('RDF filters benchmark simulated'); process.exit(0)\"",
    "metrics:export": "node scripts/health-check.js --verbose > /tmp/metrics.json",
    "test:security:path-traversal": "vitest run tests/security/path-traversal.test.js",
    "test:security:template-injection": "vitest run tests/security/template-injection.test.js",
    "test:security:input-sanitization": "vitest run tests/security/input-sanitization.test.js",
    "test:security:penetration": "node scripts/security/penetration-tests.js",
    "coverage:security": "vitest run tests/security/ --coverage --coverage.reporter=json --coverage.reporter=html --coverage.reportsDirectory=coverage/security",
    "test:ci": "vitest run --config vitest.ci.config.js",
    "test:ci:unit": "node scripts/ci-test-runner.js unit",
    "test:ci:integration": "node scripts/ci-test-runner.js integration",
    "test:ci:security": "node scripts/ci-test-runner.js security",
    "test:ci:performance": "node scripts/ci-test-runner.js performance",
    "test:ci:smoke": "node scripts/ci-test-runner.js smoke",
    "test:ci:regression": "node scripts/ci-test-runner.js regression",
    "test:flaky": "node scripts/flaky-test-detector.js",
    "test:flaky:unit": "node scripts/flaky-test-detector.js unit 10",
    "test:flaky:integration": "node scripts/flaky-test-detector.js integration 5",
    "test:coverage": "vitest run --config vitest.ci.config.js --coverage",
    "docker:test": "node scripts/docker-test-runner.js",
    "docker:test:verbose": "node scripts/docker-test-runner.js --verbose",
    "docker:test:security": "node scripts/docker-test-runner.js --security",
    "test:load": "node tests/stress/load-test.js",
    "test:memory": "node tests/stress/memory-test.js",
    "test:resource-validation": "vitest run tests/docker-validation/resource-validation.test.js",
    "test:docker-stress": "vitest run tests/docker-validation/docker-stress.test.js",
    "test:minimal-resources": "NODE_ENV=test MEMORY_LIMIT=128 CPU_LIMIT=0.25 vitest run tests/docker-validation/resource-validation.test.js --reporter=basic",
    "lint": "npx eslint src/ bin/ scripts/ || echo 'Linting completed with issues'",
    "lint:fix": "npx eslint src/ bin/ scripts/ --fix || echo 'Auto-fix completed'",
    "lint:quality": "npx eslint --config .eslintrc.quality.js src/ bin/ scripts/",
    "lint:quality:fix": "npx eslint --config .eslintrc.quality.js --fix src/ bin/ scripts/",
    "lint:create-config": "echo 'module.exports = { env: { node: true, es2021: true }, extends: [\"eslint:recommended\"], parserOptions: { ecmaVersion: \"latest\", sourceType: \"module\" }, rules: { \"no-unused-vars\": \"warn\", \"no-console\": \"off\" } };' > .eslintrc.js",
    "security:scan": "npm audit --audit-level moderate || echo 'Security scan completed'",
    "security:fix": "npm audit fix || echo 'Security fixes attempted'",
    "security:sast": "node scripts/security-analysis.js",
    "security:deps": "node scripts/dependency-scan.js",
    "lint:security": "eslint . --config .eslintrc.security.js --ext .js,.ts,.jsx,.tsx",
    "security:dashboard": "node scripts/security/generate-security-dashboard.js",
    "security:sarif": "node scripts/security/consolidate-sarif-reports.js",
    "security:check": "node scripts/security/check-security-thresholds.js",
    "validate:latex": "node scripts/validate-latex.js",
    "validate:templates": "node scripts/validate-templates.js",
    "validate:schema": "node scripts/validate-schema.js",
    "validate:build": "node scripts/validate-build.js",
    "benchmark:latex": "node scripts/latex-benchmark.js",
    "benchmark:full": "node scripts/performance-benchmark.js",
    "prepublishOnly": "npm run build:enhanced",
    "publish:safe": "npm run prepublishOnly && npm publish",
    "publish:dry": "npm run prepublishOnly && npm publish --dry-run",
    "package:audit": "node scripts/package-audit.js",
    "package:prep": "node scripts/final-package-prep.js",
    "package:validate": "node scripts/production-validation.js",
    "registry:local": "node scripts/setup-local-registry.js",
    "version:patch": "npm version patch && git push --tags",
    "version:minor": "npm version minor && git push --tags",
    "version:major": "npm version major && git push --tags",
    "release": "npm run prepublishOnly && npm publish",
    "dev": "node --watch src/cli/index.js",
    "typecheck": "echo 'No TypeScript type checking - using JavaScript'",
    "format": "prettier --config .prettierrc.quality --write \"src/**/*.js\" \"scripts/**/*.js\" \"bin/**/*.js\" \"*.js\"",
    "format:check": "prettier --config .prettierrc.quality --check \"src/**/*.js\" \"scripts/**/*.js\" \"bin/**/*.js\" \"*.js\"",
    "quality": "npm run lint:quality && npm run format:check && npm run quality:complexity",
    "quality:fix": "npm run lint:quality:fix && npm run format",
    "quality:complexity": "node scripts/quality/complexity-analyzer.js --threshold 15",
    "quality:complexity:strict": "node scripts/quality/complexity-analyzer.js --threshold 10",
    "quality:report": "node scripts/quality/complexity-analyzer.js --output quality-report.json",
    "quality:dashboard": "node scripts/quality/quality-dashboard.js",
    "quality:coverage": "node scripts/quality/coverage-analyzer.js",
    "quality:gates": "npm run quality && npm run test && npm run quality:complexity:strict",
    "clean": "rm -rf node_modules package-lock.json && npm install",
    "clean:build": "rm -rf dist/ build/ .output/",
    "clean:test": "rm -rf coverage/ test-results.xml",
    "docs:build": "echo 'Documentation generation placeholder'",
    "docs:serve": "echo 'Documentation server placeholder'"
  },
  "keywords": [
    "template",
    "generator",
    "nunjucks",
    "hygen",
    "scaffolding",
    "rdf",
    "turtle",
    "semantic-web",
    "n3"
  ],
  "author": "Unjucks Team",
  "license": "MIT",
  "preferGlobal": true,
  "engines": {
    "node": ">=18.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/unjucks/unjucks"
  },
  "homepage": "https://unjucks.dev",
  "dependencies": {
    "@faker-js/faker": "^9.9.0",
    "chalk": "^4.1.2",
    "chokidar": "^3.6.0",
    "citty": "^0.1.6",
    "cli-table3": "^0.6.5",
    "confbox": "^0.2.2",
    "consola": "^3.4.2",
    "dayjs": "^1.11.18",
    "fs-extra": "^11.3.1",
    "glob": "^10.4.5",
    "gray-matter": "^4.0.3",
    "inquirer": "^12.9.4",
    "n3": "^1.26.0",
    "nunjucks": "^3.2.4",
    "ora": "^8.2.0",
    "uuid": "^12.0.0",
    "yaml": "^2.8.1",
    "zod": "^3.25.76"
  },
  "optionalDependencies": {
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "docx": "^9.5.1",
    "ejs": "^3.1.10",
    "katex": "^0.16.22",
    "officegen": "^0.6.5",
    "pdfkit": "^0.17.2",
    "puppeteer-core": "^24.19.0"
  },
  "devDependencies": {
    "@amiceli/vitest-cucumber": "^5.2.1",
    "@cucumber/cucumber": "^12.2.0",
    "@rollup/rollup-darwin-arm64": "^4.50.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "@vue/test-utils": "^2.4.6",
    "autocannon": "^7.15.0",
    "benchmark": "^2.1.4",
    "clinic": "^13.0.0",
    "eslint": "^8.57.0",
    "fast-check": "^4.3.0",
    "heapdump": "^0.3.15",
    "husky": "^9.1.7",
    "lint-staged": "^15.2.8",
    "memwatch-next": "^0.3.0",
    "prettier": "^3.6.2",
    "sparqljs": "^3.7.3",
    "v8-profiler-next": "^1.9.0",
    "vite": "^5.4.10",
    "vitest": "^2.1.5",
    "yargs": "^17.7.2"
  },
  "overrides": {
    "esbuild": "^0.24.3"
  },
  "resolutions": {
    "esbuild": "^0.24.3"
  },
  "peerDependencies": {
    "puppeteer": ">=23.0.0"
  },
  "peerDependenciesMeta": {
    "puppeteer": {
      "optional": true
    }
  },
  "bundledDependencies": [],
  "optionalExports": {
    "./export-pdf": {
      "import": "./src/lib/export/pdf.js",
      "require": "./dist/lib/export/pdf.cjs"
    },
    "./export-docx": {
      "import": "./src/lib/export/docx.js",
      "require": "./dist/lib/export/docx.cjs"
    },
    "./export-latex": {
      "import": "./src/lib/export/latex.js",
      "require": "./dist/lib/export/latex.cjs"
    }
  },
  "bundleDependencies": []
}